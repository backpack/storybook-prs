"use strict";(self.webpackChunkbackpack=self.webpackChunkbackpack||[]).push([[8787],{"./examples/bpk-component-scrollable-calendar/stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BpkScrollableCalendarDate:()=>stories_BpkScrollableCalendarDate,BpkScrollableCalendarGrid:()=>stories_BpkScrollableCalendarGrid,BpkScrollableCalendarGridList:()=>stories_BpkScrollableCalendarGridList,PastCalendar:()=>PastCalendar,ScrollableCalendarArAeLocale:()=>ScrollableCalendarArAeLocale,ScrollableCalendarDefault:()=>ScrollableCalendarDefault,ScrollableCalendarDifferentMinMaxDate:()=>ScrollableCalendarDifferentMinMaxDate,ScrollableCalendarDontMarkToday:()=>ScrollableCalendarDontMarkToday,ScrollableCalendarHonestWeekend:()=>ScrollableCalendarHonestWeekend,ScrollableCalendarInATallContainer:()=>ScrollableCalendarInATallContainer,ScrollableCalendarJaJpLocale:()=>ScrollableCalendarJaJpLocale,ScrollableCalendarRange:()=>ScrollableCalendarRange,ScrollableCalendarWeekSplitAcross2MonthsRange:()=>ScrollableCalendarWeekSplitAcross2MonthsRange,ScrollableCalendarWeekStartsOn6:()=>ScrollableCalendarWeekStartsOn6,ScrollableCalendarWeekStartsOnASunday:()=>ScrollableCalendarWeekStartsOnASunday,ScrollableCalendarWithASingleMonth:()=>ScrollableCalendarWithASingleMonth,ScrollableCalendarWithFocusedDate:()=>ScrollableCalendarWithFocusedDate,VisualTest:()=>VisualTest,VisualTestRange:()=>VisualTestRange,VisualTestRangeWithZoom:()=>VisualTestRangeWithZoom,VisualTestWithCustomHeight:()=>VisualTestWithCustomHeight,VisualTestWithCustomHeightWithZoom:()=>VisualTestWithCustomHeightWithZoom,VisualTestWithZoom:()=>VisualTestWithZoom,default:()=>stories});var BpkScrollableCalendarGrid_module_namespaceObject={};__webpack_require__.r(BpkScrollableCalendarGrid_module_namespaceObject);var BpkScrollableCalendarGridList_module_namespaceObject={};__webpack_require__.r(BpkScrollableCalendarGridList_module_namespaceObject);var bpk_component_calendar=__webpack_require__("./packages/bpk-component-calendar/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BpkScrollableCalendarDate=_ref=>{let{isOutside=!1,...rest}=_ref;return isOutside?null:(0,jsx_runtime.jsx)(bpk_component_calendar.Qu,{...rest})},src_BpkScrollableCalendarDate=BpkScrollableCalendarDate;BpkScrollableCalendarDate.__docgenInfo={description:"",methods:[],displayName:"BpkScrollableCalendarDate",props:{date:{required:!0,tsType:{name:"Date"},description:""},isOutside:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};var bpk_component_text=__webpack_require__("./packages/bpk-component-text/index.ts"),bpk_react_utils=__webpack_require__("./packages/bpk-react-utils/index.ts");const getClassName=(0,bpk_react_utils.fD)(BpkScrollableCalendarGrid_module_namespaceObject.default),BpkScrollableCalendarGrid=_ref=>{let{className,formatMonth,ignoreOutsideDate,month,...rest}=_ref;const classNames=getClassName("bpk-scrollable-calendar-grid",className);return(0,jsx_runtime.jsxs)("div",{className:classNames,children:[(0,jsx_runtime.jsx)("span",{className:getClassName("bpk-scrollable-calendar-grid__title"),children:(0,jsx_runtime.jsx)(bpk_component_text.A,{tagName:"h1",textStyle:bpk_component_text.r.heading4,children:formatMonth(month)})}),(0,jsx_runtime.jsx)(bpk_component_calendar.Mu,{month,ignoreOutsideDate:!0,...rest})]})},src_BpkScrollableCalendarGrid=BpkScrollableCalendarGrid;BpkScrollableCalendarGrid.__docgenInfo={description:"",methods:[],displayName:"BpkScrollableCalendarGrid",props:{DateComponent:{required:!0,tsType:{name:"ElementType"},description:""},month:{required:!0,tsType:{name:"Date"},description:""},formatDateFull:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => Date | string",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"union",raw:"Date | string",elements:[{name:"Date"},{name:"string"}]}}},description:""},weekStartsOn:{required:!0,tsType:{name:"union",raw:"0 | 1 | 2 | 3 | 4 | 5 | 6",elements:[{name:"literal",value:"0"},{name:"literal",value:"1"},{name:"literal",value:"2"},{name:"literal",value:"3"},{name:"literal",value:"4"},{name:"literal",value:"5"},{name:"literal",value:"6"}]},description:""},formatMonth:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => Date | string",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"union",raw:"Date | string",elements:[{name:"Date"},{name:"string"}]}}},description:""}}};var react=__webpack_require__("./node_modules/react/index.js"),startOfDay=__webpack_require__("./packages/node_modules/date-fns/startOfDay.mjs"),startOfMonth=__webpack_require__("./packages/node_modules/date-fns/startOfMonth.mjs"),react_virtualized_auto_sizer_esm=__webpack_require__("./packages/node_modules/react-virtualized-auto-sizer/dist/react-virtualized-auto-sizer.esm.js"),index_esm=__webpack_require__("./packages/node_modules/react-window/dist/index.esm.js");const BpkScrollableCalendarGridList_getClassName=(0,bpk_react_utils.fD)(BpkScrollableCalendarGridList_module_namespaceObject.default),BpkScrollableCalendarGridList=props=>{const{className=null,customRowHeight=2.75,focusedDate=null,minDate,selectionConfiguration,...rest}=props,listRef=(0,react.useRef)(null),startDate=(0,startOfDay.o)((0,startOfMonth.w)(minDate)),endDate=(0,startOfDay.o)((0,startOfMonth.w)(rest.maxDate)),monthsCount=bpk_component_calendar.Em.differenceInCalendarMonths(endDate,startDate),rowHeight=customRowHeight,estimatedMonthItemHeight=16*(8.125+5*rowHeight),[rootFontSize,setRootFontSize]=(0,react.useState)((()=>parseFloat(getComputedStyle(document.documentElement).fontSize)||16)),months=(0,react.useMemo)((()=>((startDate,count)=>{const months=[];for(let i=0;i<count+1;i+=1)months.push(bpk_component_calendar.Em.addMonths(startDate,i));return months})(startDate,monthsCount)),[minDate,monthsCount]),monthItemHeights=(0,react.useMemo)((()=>((months,weekStartsOn,columnCount,rowHeight,baseMonthItemHeight)=>months.map((month=>{const calendarGridSpaces=(month.getDay()+7-weekStartsOn)%7+bpk_component_calendar.Em.daysInMonth(month.getFullYear(),month.getMonth()),rowCount=Math.ceil(calendarGridSpaces/columnCount);return baseMonthItemHeight+rowHeight*rowCount})))(months,rest.weekStartsOn,7,rowHeight*rootFontSize,8.125*rootFontSize)),[rootFontSize,months,rest.weekStartsOn]);(0,react.useEffect)((()=>{listRef.current&&listRef.current.resetAfterIndex(0)}),[monthItemHeights]);const getItemSize=index=>monthItemHeights[index]||estimatedMonthItemHeight,rowRenderer=_ref=>{let{index,style}=_ref;return(0,jsx_runtime.jsx)("div",{style,children:(0,jsx_runtime.jsx)(src_BpkScrollableCalendarGrid,{onDateClick:rest.onDateClick,...rest,minDate,selectionConfiguration,month:months[index],focusedDate,preventKeyboardFocus:rest.preventKeyboardFocus,"aria-hidden":1!==index})})},calculateOffsetInPixels=numberOfMonths=>{let result=0;for(let i=0;i<numberOfMonths;i+=1)result+=getItemSize(i);return result},date=(null==selectionConfiguration?void 0:selectionConfiguration.type)===bpk_component_calendar.BH.single?null==selectionConfiguration?void 0:selectionConfiguration.date:null==selectionConfiguration?void 0:selectionConfiguration.startDate,selectedDate=focusedDate||date;return(0,jsx_runtime.jsx)("div",{className:BpkScrollableCalendarGridList_getClassName("bpk-scrollable-calendar-grid-list",className),children:(0,jsx_runtime.jsx)(react_virtualized_auto_sizer_esm.Ay,{onResize:()=>{const newRootFontSize=parseFloat(getComputedStyle(document.documentElement).fontSize)||16;setRootFontSize(newRootFontSize)},defaultHeight:estimatedMonthItemHeight,defaultWidth:910,children:_ref2=>{let{height,width}=_ref2;return(0,jsx_runtime.jsx)(index_esm._m,{style:"rtl"===("undefined"!=typeof document?document.querySelector("html"):{}).dir?{direction:"rtl"}:{},width,height,estimatedItemSize:estimatedMonthItemHeight,itemSize:getItemSize,itemCount:months.length,overscanCount:1,initialScrollOffset:calculateOffsetInPixels(selectedDate?bpk_component_calendar.Em.differenceInCalendarMonths(selectedDate,minDate):0),ref:listRef,children:rowRenderer})}})})},src_BpkScrollableCalendarGridList=BpkScrollableCalendarGridList;BpkScrollableCalendarGridList.__docgenInfo={description:"",methods:[],displayName:"BpkScrollableCalendarGridList",props:{minDate:{required:!0,tsType:{name:"Date"},description:""},maxDate:{required:!0,tsType:{name:"Date"},description:""},DateComponent:{required:!0,tsType:{name:"ElementType"},description:""},formatDateFull:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => Date | string",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"union",raw:"Date | string",elements:[{name:"Date"},{name:"string"}]}}},description:""},month:{required:!0,tsType:{name:"Date"},description:""},weekStartsOn:{required:!0,tsType:{name:"union",raw:"0 | 1 | 2 | 3 | 4 | 5 | 6",elements:[{name:"literal",value:"0"},{name:"literal",value:"1"},{name:"literal",value:"2"},{name:"literal",value:"3"},{name:"literal",value:"4"},{name:"literal",value:"5"},{name:"literal",value:"6"}]},description:""},formatMonth:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => Date | string",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"union",raw:"Date | string",elements:[{name:"Date"},{name:"string"}]}}},description:""},focusedDate:{required:!1,tsType:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},description:""},selectionConfiguration:{required:!1,tsType:{name:"union",raw:"| SelectionConfigurationSingle\n| SelectionConfigurationRange",elements:[{name:"signature",type:"object",raw:"{\n  type: typeof CALENDAR_SELECTION_TYPE.single;\n  date: Date | null;\n}",signature:{properties:[{key:"type",value:{name:"CALENDAR_SELECTION_TYPE.single",required:!0}},{key:"date",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: typeof CALENDAR_SELECTION_TYPE.range;\n  startDate: Date | null;\n  endDate: Date | null;\n}",signature:{properties:[{key:"type",value:{name:"CALENDAR_SELECTION_TYPE.range",required:!0}},{key:"startDate",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}},{key:"endDate",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}}]}}]},description:""},className:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},customRowHeight:{required:!1,tsType:{name:"number"},description:"Sets the height of month rows in 'rem' units. If not specified, the default value of `2.75rem` will be used."}}};var endOfMonth=__webpack_require__("./node_modules/date-fns/endOfMonth.mjs"),date_fns_startOfMonth=__webpack_require__("./node_modules/date-fns/startOfMonth.mjs");const bpk_component_scrollable_calendar=(0,bpk_component_calendar.WY)((0,bpk_component_calendar.bB)(null,bpk_component_calendar.NJ,src_BpkScrollableCalendarGridList,src_BpkScrollableCalendarDate));var bpk_storybook_utils=__webpack_require__("./examples/bpk-storybook-utils/index.js"),format=__webpack_require__("./node_modules/date-fns/format.mjs");const formatDateFull=date=>(0,format.GP)(date,"EEEE, do MMMM yyyy"),formatDateFullArabic=date=>{const newString="EEEE, dd، MMMM، yyyy".replace("yyyy",date.getUTCFullYear());return(0,format.GP)(date,newString)},formatDateFullJapanese=date=>{const newString="Y年M月d日EEEE".replace("Y",date.getUTCFullYear());return(0,format.GP)(date,newString)},formatMonth=date=>(0,format.GP)(date,"MMMM yyyy"),formatMonthArabic=date=>"".concat(["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"][date.getMonth()]," ").concat(date.getFullYear()),formatMonthJapanese=date=>"".concat(date.getFullYear(),"年").concat(["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"][date.getMonth()]),weekDays=[{name:"Sunday",nameAbbr:"Sun",index:0,isWeekend:!0},{name:"Monday",nameAbbr:"Mon",index:1,isWeekend:!1},{name:"Tuesday",nameAbbr:"Tue",index:2,isWeekend:!1},{name:"Wednesday",nameAbbr:"Wed",index:3,isWeekend:!1},{name:"Thursday",nameAbbr:"Thu",index:4,isWeekend:!1},{name:"Friday",nameAbbr:"Fri",index:5,isWeekend:!1},{name:"Saturday",nameAbbr:"Sat",index:6,isWeekend:!0}],weekDaysMoreWeekend=[{name:"Sunday",nameAbbr:"Sun",index:0,isWeekend:!0},{name:"Monday",nameAbbr:"Mon",index:1,isWeekend:!1},{name:"Tuesday",nameAbbr:"Tue",index:2,isWeekend:!1},{name:"Wednesday",nameAbbr:"Wed",index:3,isWeekend:!1},{name:"Thursday",nameAbbr:"Thu",index:4,isWeekend:!1},{name:"Friday",nameAbbr:"Fri",index:5,isWeekend:!0},{name:"Saturday",nameAbbr:"Sat",index:6,isWeekend:!0}],weekDaysArabic=[{name:"الأحد",nameAbbr:"الأحد",nameShort:"الأحد",index:0,cldrKey:"sun",isWeekend:!1},{name:"الاثنين",nameAbbr:"الاثنين",nameShort:"الاثنين",index:1,cldrKey:"mon",isWeekend:!1},{name:"الثلاثاء",nameAbbr:"الثلاثاء",nameShort:"الثلاثاء",index:2,cldrKey:"tue",isWeekend:!1},{name:"الأربعاء",nameAbbr:"الأربعاء",nameShort:"الأربعاء",index:3,cldrKey:"wed",isWeekend:!1},{name:"الخميس",nameAbbr:"الخميس",nameShort:"الخميس",index:4,cldrKey:"thu",isWeekend:!1},{name:"الجمعة",nameAbbr:"الجمعة",nameShort:"الجمعة",index:5,cldrKey:"fri",isWeekend:!0},{name:"السبت",nameAbbr:"السبت",nameShort:"السبت",index:6,cldrKey:"sat",isWeekend:!0}],weekDaysJapanese=[{name:"日曜日",nameAbbr:"日",nameShort:"日",index:0,cldrKey:"sun",isWeekend:!0},{name:"月曜日",nameAbbr:"月",nameShort:"月",index:1,cldrKey:"mon",isWeekend:!1},{name:"火曜日",nameAbbr:"火",nameShort:"火",index:2,cldrKey:"tue",isWeekend:!1},{name:"水曜日",nameAbbr:"水",nameShort:"水",index:3,cldrKey:"wed",isWeekend:!1},{name:"木曜日",nameAbbr:"木",nameShort:"木",index:4,cldrKey:"thu",isWeekend:!1},{name:"金曜日",nameAbbr:"金",nameShort:"金",index:5,cldrKey:"fri",isWeekend:!1},{name:"土曜日",nameAbbr:"土",nameShort:"土",index:6,cldrKey:"sat",isWeekend:!0}];class ScrollableCal extends react.Component{constructor(props){super(props),"range"===this.props.selectionConfiguration.type?this.state={selectionConfiguration:{type:this.props.selectionConfiguration.type,startDate:this.props.selectionConfiguration.startDate,endDate:this.props.selectionConfiguration.endDate}}:this.state={selectionConfiguration:{type:this.props.selectionConfiguration.type,date:this.props.selectionConfiguration.date}}}render(){var _this=this;return(0,jsx_runtime.jsx)(bpk_component_scrollable_calendar,{id:"calendar",...this.props,onDateSelect:function(startDate){let endDate=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;"range"===_this.props.selectionConfiguration.type?(startDate&&!endDate&&(_this.setState({selectionConfiguration:{type:_this.props.selectionConfiguration.type,startDate,endDate:null}}),(0,bpk_storybook_utils.XI)("Selected day")(startDate)),startDate&&endDate&&(_this.setState({selectionConfiguration:{type:_this.props.selectionConfiguration.type,startDate,endDate}}),(0,bpk_storybook_utils.XI)("Selected end day")(endDate))):(_this.setState({selectionConfiguration:{type:_this.props.selectionConfiguration.type,date:startDate}}),(0,bpk_storybook_utils.XI)("Selected day")(startDate))},selectionConfiguration:this.state.selectionConfiguration})}}ScrollableCal.propTypes={selectionConfiguration:bpk_component_calendar.cd.SelectionConfiguration},ScrollableCal.defaultProps={selectionConfiguration:{type:bpk_component_calendar.BH.single,date:new Date}};const DefaultExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:bpk_component_calendar.BH.single,date:new Date(2020,3,15)}}),DefaultExampleWithCustomHeight=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:bpk_component_calendar.BH.single,date:new Date(2020,3,15)},customRowHeight:3}),RangeExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,markToday:!1,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:"range",startDate:new Date(2020,5,7),endDate:new Date(2020,5,15)}}),SplitWeekRangeExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{DateComponent:src_BpkScrollableCalendarDate,formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:0,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:"range",startDate:new Date(2020,3,29),endDate:new Date(2020,4,4)}}),WeekStartsOnSixExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:6,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),WithFocusedDateExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),focusedDate:bpk_component_calendar.Em.addMonths(new Date,11),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),TallContainerExample=()=>(0,jsx_runtime.jsx)("div",{style:{height:"500px",display:"flex"},children:(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)})}),SingleMonthExample=()=>(0,jsx_runtime.jsx)("div",{style:{height:"500px",display:"flex"},children:(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:(0,date_fns_startOfMonth.w)(new Date),maxDate:(0,endOfMonth.p)(new Date)})}),ScrollableCalendarDateExample=()=>(0,jsx_runtime.jsx)(src_BpkScrollableCalendarDate,{date:new Date,onDateClick:(0,bpk_storybook_utils.XI)("Clicked day")}),ScrollableCalendarGridExample=()=>(0,jsx_runtime.jsx)(src_BpkScrollableCalendarGrid,{month:new Date(2019,1,0),weekStartsOn:1,daysOfWeek:weekDays,onDateClick:(0,bpk_storybook_utils.XI)("Clicked day"),formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate}),ScrollableCalendarGridListExample=()=>(0,jsx_runtime.jsx)(src_BpkScrollableCalendarGridList,{month:new Date,weekStartsOn:1,daysOfWeek:weekDays,onDateClick:(0,bpk_storybook_utils.XI)("Clicked day"),formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),WeekStartsOnSundayExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:0,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),HonestWeekendExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDaysMoreWeekend,weekStartsOn:1,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),ArabicLocaleExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth:formatMonthArabic,formatDateFull:formatDateFullArabic,daysOfWeek:weekDaysArabic,weekStartsOn:6,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),JapaneseLocaleExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth:formatMonthJapanese,formatDateFull:formatDateFullJapanese,daysOfWeek:weekDaysJapanese,weekStartsOn:0,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),DifferentMinMaxDatesExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:1,minDate:new Date(2020,4,15),maxDate:new Date(2020,5,15)}),DontMarkTodayExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:1,markToday:!1,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),PastCalendarExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:1,markToday:!1,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1)});DefaultExample.__docgenInfo={description:"",methods:[],displayName:"DefaultExample"},DefaultExampleWithCustomHeight.__docgenInfo={description:"",methods:[],displayName:"DefaultExampleWithCustomHeight"},RangeExample.__docgenInfo={description:"",methods:[],displayName:"RangeExample"},SplitWeekRangeExample.__docgenInfo={description:"",methods:[],displayName:"SplitWeekRangeExample"},WeekStartsOnSixExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSixExample"},WithFocusedDateExample.__docgenInfo={description:"",methods:[],displayName:"WithFocusedDateExample"},TallContainerExample.__docgenInfo={description:"",methods:[],displayName:"TallContainerExample"},SingleMonthExample.__docgenInfo={description:"",methods:[],displayName:"SingleMonthExample"},WeekStartsOnSundayExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSundayExample"},HonestWeekendExample.__docgenInfo={description:"",methods:[],displayName:"HonestWeekendExample"},ArabicLocaleExample.__docgenInfo={description:"",methods:[],displayName:"ArabicLocaleExample"},JapaneseLocaleExample.__docgenInfo={description:"",methods:[],displayName:"JapaneseLocaleExample"},DifferentMinMaxDatesExample.__docgenInfo={description:"",methods:[],displayName:"DifferentMinMaxDatesExample"},DontMarkTodayExample.__docgenInfo={description:"",methods:[],displayName:"DontMarkTodayExample"},ScrollableCalendarDateExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarDateExample"},ScrollableCalendarGridExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridExample"},ScrollableCalendarGridListExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridListExample"},PastCalendarExample.__docgenInfo={description:"",methods:[],displayName:"PastCalendarExample"},ScrollableCal.__docgenInfo={description:"",methods:[],displayName:"ScrollableCal",props:{selectionConfiguration:{defaultValue:{value:"{\n  type: CALENDAR_SELECTION_TYPE.single,\n  date: new Date(),\n}",computed:!1},description:"",type:{name:"union",value:[{name:"custom",raw:"SelectionConfigurationSingle"},{name:"custom",raw:"SelectionConfigurationRange"}]},required:!1}}},DefaultExample.__docgenInfo={description:"",methods:[],displayName:"DefaultExample"},DefaultExampleWithCustomHeight.__docgenInfo={description:"",methods:[],displayName:"DefaultExampleWithCustomHeight"},RangeExample.__docgenInfo={description:"",methods:[],displayName:"RangeExample"},SplitWeekRangeExample.__docgenInfo={description:"",methods:[],displayName:"SplitWeekRangeExample"},WeekStartsOnSixExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSixExample"},WithFocusedDateExample.__docgenInfo={description:"",methods:[],displayName:"WithFocusedDateExample"},TallContainerExample.__docgenInfo={description:"",methods:[],displayName:"TallContainerExample"},SingleMonthExample.__docgenInfo={description:"",methods:[],displayName:"SingleMonthExample"},WeekStartsOnSundayExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSundayExample"},HonestWeekendExample.__docgenInfo={description:"",methods:[],displayName:"HonestWeekendExample"},ArabicLocaleExample.__docgenInfo={description:"",methods:[],displayName:"ArabicLocaleExample"},JapaneseLocaleExample.__docgenInfo={description:"",methods:[],displayName:"JapaneseLocaleExample"},DifferentMinMaxDatesExample.__docgenInfo={description:"",methods:[],displayName:"DifferentMinMaxDatesExample"},DontMarkTodayExample.__docgenInfo={description:"",methods:[],displayName:"DontMarkTodayExample"},ScrollableCalendarDateExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarDateExample"},ScrollableCalendarGridExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridExample"},ScrollableCalendarGridListExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridListExample"},PastCalendarExample.__docgenInfo={description:"",methods:[],displayName:"PastCalendarExample"},ScrollableCal.__docgenInfo={description:"",methods:[],displayName:"ScrollableCal",props:{selectionConfiguration:{defaultValue:{value:"{\n  type: CALENDAR_SELECTION_TYPE.single,\n  date: new Date(),\n}",computed:!1},description:"",type:{name:"custom",raw:"CustomPropTypes.SelectionConfiguration"},required:!1}}};const BpkScrollableCalendarMock=props=>(0,jsx_runtime.jsx)("div",{});BpkScrollableCalendarMock.__docgenInfo={description:"",methods:[],displayName:"BpkScrollableCalendarMock",props:{changeMonthLabel:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"**Required** if Nav !== null"},daysOfWeek:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  name: string;\n  nameAbbr: string;\n  index: number;\n  isWeekend: boolean;\n  [key: string]: any;\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"nameAbbr",value:{name:"string",required:!0}},{key:"index",value:{name:"number",required:!0}},{key:"isWeekend",value:{name:"boolean",required:!0}},{key:{name:"string"},value:{name:"any",required:!0}}]}}],raw:"WeekDay[]"},description:"An array of objects describing the days of the week"},formatDateFull:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => Date | string",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"union",raw:"Date | string",elements:[{name:"Date"},{name:"string"}]}}},description:'A function to format a full, human-readable date, for example: "Monday, 8th January 2018".'},formatMonth:{required:!0,tsType:{name:"signature",type:"function",raw:"(date: Date) => Date | string",signature:{arguments:[{type:{name:"Date"},name:"date"}],return:{name:"union",raw:"Date | string",elements:[{name:"Date"},{name:"string"}]}}},description:'A function to format a human-readable month, for example: "January 2018":\nIf you just need to quickly prototype, use the following from [`date-fns`](https://date-fns.org/docs/format#usage)'},id:{required:!0,tsType:{name:"string"},description:""},maxDate:{required:!1,tsType:{name:"Date"},description:""},minDate:{required:!1,tsType:{name:"Date"},description:""},month:{required:!0,tsType:{name:"Date"},description:""},nextMonthLabel:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"**Required** if Nav !== null"},previousMonthLabel:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"**Required** if Nav !== null"},weekStartsOn:{required:!0,tsType:{name:"union",raw:"0 | 1 | 2 | 3 | 4 | 5 | 6",elements:[{name:"literal",value:"0"},{name:"literal",value:"1"},{name:"literal",value:"2"},{name:"literal",value:"3"},{name:"literal",value:"4"},{name:"literal",value:"5"},{name:"literal",value:"6"}]},description:"First day of the week. 0 = Sunday, 1 = Monday, ..., 6 = Saturday."},className:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},dateModifiers:{required:!1,tsType:{name:"signature",type:"object",raw:"{ [key: string]: Function }",signature:{properties:[{key:{name:"string"},value:{name:"Function",required:!0}}]}},description:""},fixedWidth:{required:!1,tsType:{name:"boolean"},description:"If set to true (default), it sets a fixed width on the calendar container. This is necessary to support transitions and to create the right size for the Datepicker component.\nIf set to false, the calendar is of fluid width and will take up the space of its parent container."},focusedDate:{required:!1,tsType:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},description:""},markOutsideDays:{required:!1,tsType:{name:"boolean"},description:""},markToday:{required:!1,tsType:{name:"boolean"},description:""},onMonthChange:{required:!1,tsType:{name:"union",raw:"| ((\n    event: UIEvent,\n    { month, source }: { month: Date; source: string },\n  ) => void)\n| null",elements:[{name:"unknown"},{name:"null"}]},description:""},onDateClick:{required:!1,tsType:{name:"union",raw:"((date: Date) => void) | null",elements:[{name:"unknown"},{name:"null"}]},description:""},onDateKeyDown:{required:!1,tsType:{name:"union",raw:"((event: KeyboardEvent) => void) | null",elements:[{name:"unknown"},{name:"null"}]},description:""},preventKeyboardFocus:{required:!1,tsType:{name:"boolean"},description:""},selectionConfiguration:{required:!1,tsType:{name:"union",raw:"| SelectionConfigurationSingle\n| SelectionConfigurationRange",elements:[{name:"signature",type:"object",raw:"{\n  type: typeof CALENDAR_SELECTION_TYPE.single;\n  date: Date | null;\n}",signature:{properties:[{key:"type",value:{name:"CALENDAR_SELECTION_TYPE.single",required:!0}},{key:"date",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}}]}},{name:"signature",type:"object",raw:"{\n  type: typeof CALENDAR_SELECTION_TYPE.range;\n  startDate: Date | null;\n  endDate: Date | null;\n}",signature:{properties:[{key:"type",value:{name:"CALENDAR_SELECTION_TYPE.range",required:!0}},{key:"startDate",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}},{key:"endDate",value:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}],required:!0}}]}}]},description:"An object to indicate which configuration of the calendar is being used. Choices are `single` date selection or `range` date selection."},gridClassName:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},customRowHeight:{required:!1,tsType:{name:"number"},description:"Sets the height of month rows in 'rem' units. If not specified, the default value of `2.75rem` will be used."},weekDayKey:{required:!1,tsType:{name:"string"},description:"Key to be used to pick the desired weekDay format from the `daysOfWeek` object, for example: `nameAbbr` or `nameNarrow`."},navProps:{required:!1,tsType:{name:"union",raw:"{} | null",elements:[{name:"signature",type:"object",raw:"{}",signature:{properties:[]}},{name:"null"}]},description:"This is useful if your custom implementation of Nav component requires additional properties. They will be passed, unmodified."},headerProps:{required:!1,tsType:{name:"union",raw:"{} | null",elements:[{name:"signature",type:"object",raw:"{}",signature:{properties:[]}},{name:"null"}]},description:"This is useful if your custom implementation of Header component requires additional properties. They will be passed, unmodified."},gridProps:{required:!1,tsType:{name:"union",raw:"{} | null",elements:[{name:"signature",type:"object",raw:"{}",signature:{properties:[]}},{name:"null"}]},description:"This is useful if your custom implementation of Grid component requires additional properties. They will be passed, unmodified."},dateProps:{required:!1,tsType:{name:"union",raw:"{} | null",elements:[{name:"signature",type:"object",raw:"{}",signature:{properties:[]}},{name:"null"}]},description:"This is useful if your custom implementation of Date component requires additional properties. They will be passed, unmodified."},onDateSelect:{required:!1,tsType:{name:"union",raw:"((date: Date, newDate?: Date) => void) | null",elements:[{name:"unknown"},{name:"null"}]},description:""},initiallyFocusedDate:{required:!1,tsType:{name:"union",raw:"Date | null",elements:[{name:"Date"},{name:"null"}]},description:"Sets the date that is focused initially, this prop has no effect if `selectionConfiguration` is specified in which case the date specified in this prop is focused. If no selected date is set and `initiallyFocusedDate` is not set the focused date is the `minDate`(defaults to today if it has not been explicitly set)."}}};const stories={title:"bpk-component-scrollable-calendar",component:src_BpkScrollableCalendarGridList,subcomponents:{BpkScrollableCalendarDate:src_BpkScrollableCalendarDate,BpkScrollableCalendarGrid:src_BpkScrollableCalendarGrid,BpkScrollableCalendar:BpkScrollableCalendarMock}},ScrollableCalendarDefault=DefaultExample,ScrollableCalendarRange=RangeExample,ScrollableCalendarWeekSplitAcross2MonthsRange=SplitWeekRangeExample,ScrollableCalendarWeekStartsOn6=WeekStartsOnSixExample,ScrollableCalendarWithFocusedDate=WithFocusedDateExample,ScrollableCalendarInATallContainer=TallContainerExample,ScrollableCalendarWithASingleMonth=SingleMonthExample,ScrollableCalendarWeekStartsOnASunday=WeekStartsOnSundayExample,ScrollableCalendarHonestWeekend=HonestWeekendExample,ScrollableCalendarArAeLocale=ArabicLocaleExample,ScrollableCalendarJaJpLocale=JapaneseLocaleExample,ScrollableCalendarDifferentMinMaxDate=DifferentMinMaxDatesExample,ScrollableCalendarDontMarkToday=DontMarkTodayExample,PastCalendar=PastCalendarExample,stories_BpkScrollableCalendarDate=ScrollableCalendarDateExample,stories_BpkScrollableCalendarGrid=ScrollableCalendarGridExample,stories_BpkScrollableCalendarGridList=ScrollableCalendarGridListExample,VisualTest=DefaultExample,VisualTestWithZoom=VisualTest.bind({});VisualTestWithZoom.args={zoomEnabled:!0};const VisualTestWithCustomHeight=DefaultExampleWithCustomHeight,VisualTestWithCustomHeightWithZoom=VisualTestWithCustomHeight.bind({});VisualTestWithCustomHeightWithZoom.args={zoomEnabled:!0};const VisualTestRange=RangeExample,VisualTestRangeWithZoom=VisualTestRange.bind({});VisualTestRangeWithZoom.args={zoomEnabled:!0}},"./examples/bpk-storybook-utils/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{hE:()=>src_BpkDarkExampleWrapper,XI:()=>action});var BpkDarkExampleWrapper_module_namespaceObject={};__webpack_require__.r(BpkDarkExampleWrapper_module_namespaceObject);var bpk_react_utils=__webpack_require__("./packages/bpk-react-utils/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const getClassName=(0,bpk_react_utils.fD)(BpkDarkExampleWrapper_module_namespaceObject.default),BpkDarkExampleWrapper=props=>{const{padded,...rest}=props;return(0,jsx_runtime.jsx)("div",{className:getClassName("bpk-dark-example-wrapper",padded&&"bpk-dark-example-wrapper--padded"),...rest})};BpkDarkExampleWrapper.defaultProps={padded:!1},BpkDarkExampleWrapper.__docgenInfo={description:"",methods:[],displayName:"BpkDarkExampleWrapper",props:{padded:{defaultValue:{value:"false",computed:!1},required:!1,flowType:{name:"boolean"},description:""}}};const src_BpkDarkExampleWrapper=BpkDarkExampleWrapper;BpkDarkExampleWrapper.__docgenInfo={description:"",methods:[],displayName:"BpkDarkExampleWrapper",props:{padded:{required:!1,flowType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};let action=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return()=>console.info(args)};try{const storybookAction=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.js").XI;storybookAction&&(action=storybookAction)}catch(e){console.info("Storybook action is not available. Falling back to `console.log`.")}}}]);