"use strict";(self.webpackChunkbackpack=self.webpackChunkbackpack||[]).push([[6373],{"./examples/bpk-scrim-utils/stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,ExampleWithCustomRenderTarget:()=>ExampleWithCustomRenderTarget,default:()=>stories});var examples_namespaceObject={};__webpack_require__.r(examples_namespaceObject);var dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks_dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),BpkScrim=__webpack_require__("./packages/bpk-scrim-utils/src/BpkScrim.tsx"),bpk_component_button=__webpack_require__("./packages/bpk-component-button/index.ts"),bpk_react_utils=__webpack_require__("./packages/bpk-react-utils/index.ts"),bpk_scrim_utils=__webpack_require__("./packages/bpk-scrim-utils/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const getClassName=(0,bpk_react_utils.fD)(examples_namespaceObject.default),DialogContentWithScrim=(0,bpk_scrim_utils.BJ)((()=>(0,jsx_runtime.jsx)("section",{tabIndex:-1,role:"dialog",className:getClassName("bpk-scrim-utils-example__dialog"),children:(0,jsx_runtime.jsxs)("div",{className:getClassName("bpk-scrim-utils-example__dialog-content"),children:[(0,jsx_runtime.jsx)("div",{children:"Dialog content here."}),(0,jsx_runtime.jsx)(bpk_component_button.Q1,{children:"Some button"})]})}))),WithPortalScrimExample=()=>(0,jsx_runtime.jsxs)("div",{id:"pagewrap",children:[(0,jsx_runtime.jsx)("div",{children:"This element should be hidden from AT by the scrim. It should also not be possible to tab to it."}),(0,jsx_runtime.jsx)(DialogContentWithScrim,{getApplicationElement:()=>document.getElementById("pagewrap"),closeOnScrimClick:!1,containerClassName:getClassName("bpk-scrim-utils-example__dialog-container")})]}),WithCustomElementAndPortalScrimExample=()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("div",{id:"portalElement",children:"Dialog attached here."}),(0,jsx_runtime.jsxs)("div",{id:"pagewrap",children:[(0,jsx_runtime.jsx)("div",{children:"This element should be hidden from AT by the scrim. It should also not be possible to tab to it."}),(0,jsx_runtime.jsx)(DialogContentWithScrim,{getApplicationElement:()=>document.getElementById("pagewrap"),closeOnScrimClick:!1,containerClassName:getClassName("bpk-scrim-utils-example__dialog-container"),renderTarget:()=>document.getElementById("portalElement")})]})]});WithPortalScrimExample.__docgenInfo={description:"",methods:[],displayName:"WithPortalScrimExample"},WithCustomElementAndPortalScrimExample.__docgenInfo={description:"",methods:[],displayName:"WithCustomElementAndPortalScrimExample"};const withScrimMock=props=>(0,jsx_runtime.jsx)("div",{}),withScrimmedPortalMock=props=>(0,jsx_runtime.jsx)("div",{});withScrimMock.__docgenInfo={description:"",methods:[],displayName:"withScrimMock",props:{getApplicationElement:{required:!0,tsType:{name:"signature",type:"function",raw:"() => HTMLElement | null",signature:{arguments:[],return:{name:"union",raw:"HTMLElement | null",elements:[{name:"HTMLElement"},{name:"null"}]}}},description:'The `pagewrap` element id is a convention we use internally at Skyscanner. In most cases it should "just work".'},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void | null",signature:{arguments:[],return:{name:"union",raw:"void | null",elements:[{name:"void"},{name:"null"}]}}},description:"This is required unless `closeOnScrimClick` is false. It should be set as the `onClick` action on a button or a link."},isIphone:{required:!1,tsType:{name:"boolean"},description:"Can be used to apply iPhone only styles or behaviour, as it has different scrolling behaviour"},isIpad:{required:!1,tsType:{name:"boolean"},description:""},containerClassName:{required:!1,tsType:{name:"string"},description:"It can be used to apply styles to the full-screen container into which the enriched component is inserted (e.g. `display: flex` or `display: grid`)"},closeOnScrimClick:{required:!1,tsType:{name:"boolean"},description:""}}},withScrimmedPortalMock.__docgenInfo={description:"",methods:[],displayName:"withScrimmedPortalMock",props:{getApplicationElement:{required:!0,tsType:{name:"signature",type:"function",raw:"() => HTMLElement | null",signature:{arguments:[],return:{name:"union",raw:"HTMLElement | null",elements:[{name:"HTMLElement"},{name:"null"}]}}},description:'The `pagewrap` element id is a convention we use internally at Skyscanner. In most cases it should "just work".'},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void | null",signature:{arguments:[],return:{name:"union",raw:"void | null",elements:[{name:"void"},{name:"null"}]}}},description:"This is required unless `closeOnScrimClick` is false. It should be set as the `onClick` action on a button or a link."},isIphone:{required:!1,tsType:{name:"boolean"},description:"Can be used to apply iPhone only styles or behaviour, as it has different scrolling behaviour"},isIpad:{required:!1,tsType:{name:"boolean"},description:""},containerClassName:{required:!1,tsType:{name:"string"},description:"It can be used to apply styles to the full-screen container into which the enriched component is inserted (e.g. `display: flex` or `display: grid`)"},closeOnScrimClick:{required:!1,tsType:{name:"boolean"},description:""},renderTarget:{required:!1,tsType:{name:"union",raw:"(() => HTMLElement | null) | null",elements:[{name:"unknown"},{name:"null"}]},description:""}}};const stories={title:"bpk-scrim-utils",component:BpkScrim.A,subcomponents:{withScrimMock,withScrimmedPortalMock},parameters:{docs:{page:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks_dist.hE,{}),(0,jsx_runtime.jsx)(dist.ov,{}),(0,jsx_runtime.jsx)(blocks_dist.oz,{children:"`withScrim` sends all props it receives down to the component, except `getApplicationElement` and `padded`. It also adds some props that are used for a11y and closing the modal:\n          `dialogRef` should be set as the ref on the visible container on top of the scrim; it is used to set focus, `onClose` , `isIphone`"})]})}}},Example=WithPortalScrimExample,ExampleWithCustomRenderTarget=WithCustomElementAndPortalScrimExample}}]);