"use strict";(self.webpackChunkbackpack=self.webpackChunkbackpack||[]).push([[8787],{"./examples/bpk-component-scrollable-calendar/stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BpkScrollableCalendarDate:()=>stories_BpkScrollableCalendarDate,BpkScrollableCalendarGrid:()=>stories_BpkScrollableCalendarGrid,BpkScrollableCalendarGridList:()=>stories_BpkScrollableCalendarGridList,PastCalendar:()=>PastCalendar,ScrollableCalendarArAeLocale:()=>ScrollableCalendarArAeLocale,ScrollableCalendarDefault:()=>ScrollableCalendarDefault,ScrollableCalendarDifferentMinMaxDate:()=>ScrollableCalendarDifferentMinMaxDate,ScrollableCalendarDontMarkToday:()=>ScrollableCalendarDontMarkToday,ScrollableCalendarHonestWeekend:()=>ScrollableCalendarHonestWeekend,ScrollableCalendarInATallContainer:()=>ScrollableCalendarInATallContainer,ScrollableCalendarJaJpLocale:()=>ScrollableCalendarJaJpLocale,ScrollableCalendarRange:()=>ScrollableCalendarRange,ScrollableCalendarWeekSplitAcross2MonthsRange:()=>ScrollableCalendarWeekSplitAcross2MonthsRange,ScrollableCalendarWeekStartsOn6:()=>ScrollableCalendarWeekStartsOn6,ScrollableCalendarWeekStartsOnASunday:()=>ScrollableCalendarWeekStartsOnASunday,ScrollableCalendarWithASingleMonth:()=>ScrollableCalendarWithASingleMonth,ScrollableCalendarWithFocusedDate:()=>ScrollableCalendarWithFocusedDate,VisualTest:()=>VisualTest,VisualTestRange:()=>VisualTestRange,VisualTestRangeWithZoom:()=>VisualTestRangeWithZoom,VisualTestWithCustomHeight:()=>VisualTestWithCustomHeight,VisualTestWithCustomHeightWithZoom:()=>VisualTestWithCustomHeightWithZoom,VisualTestWithZoom:()=>VisualTestWithZoom,default:()=>stories});var BpkScrollableCalendarGrid_module_namespaceObject={};__webpack_require__.r(BpkScrollableCalendarGrid_module_namespaceObject),__webpack_require__.d(BpkScrollableCalendarGrid_module_namespaceObject,{"bpk-scrollable-calendar-grid":()=>_1,"bpk-scrollable-calendar-grid__title":()=>_2});var BpkScrollableCalendarGridList_module_namespaceObject={};__webpack_require__.r(BpkScrollableCalendarGridList_module_namespaceObject),__webpack_require__.d(BpkScrollableCalendarGridList_module_namespaceObject,{"bpk-scrollable-calendar-grid-list":()=>BpkScrollableCalendarGridList_module_1});var bpk_component_calendar=__webpack_require__("./packages/bpk-component-calendar/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BpkScrollableCalendarDate=_ref=>{let{isOutside=!1,...rest}=_ref;return isOutside?null:(0,jsx_runtime.jsx)(bpk_component_calendar.Qu,{...rest})},src_BpkScrollableCalendarDate=BpkScrollableCalendarDate;try{BpkScrollableCalendarDate.displayName="BpkScrollableCalendarDate",BpkScrollableCalendarDate.__docgenInfo={description:"",displayName:"BpkScrollableCalendarDate",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | null | undefined"}},isoLabel:{defaultValue:null,description:"",name:"isoLabel",required:!1,type:{name:"string | undefined"}},isBlocked:{defaultValue:null,description:"",name:"isBlocked",required:!1,type:{name:"boolean | undefined"}},isFocused:{defaultValue:null,description:"",name:"isFocused",required:!1,type:{name:"boolean | undefined"}},isKeyboardFocusable:{defaultValue:null,description:"",name:"isKeyboardFocusable",required:!1,type:{name:"boolean | undefined"}},isOutside:{defaultValue:{value:"false"},description:"",name:"isOutside",required:!1,type:{name:"boolean | undefined"}},isSelected:{defaultValue:null,description:"",name:"isSelected",required:!1,type:{name:"boolean | undefined"}},isToday:{defaultValue:null,description:"",name:"isToday",required:!1,type:{name:"boolean | undefined"}},modifiers:{defaultValue:null,description:"",name:"modifiers",required:!1,type:{name:"DateModifiers | undefined"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((date: Date) => void) | null | undefined"}},onDateKeyDown:{defaultValue:null,description:"",name:"onDateKeyDown",required:!1,type:{name:"((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined"}},preventKeyboardFocus:{defaultValue:null,description:"",name:"preventKeyboardFocus",required:!1,type:{name:"boolean | undefined"}},selectionType:{defaultValue:null,description:"This property determines which selected styles will be applied to the date cell. If using ranges use `start`, `middle` and `end` to apply the correct range styles.\n  - `SELECTION_TYPES.single` - When the date is selected individually i.e. Not as part of a range\n  - `SELECTION_TYPES.start` - When a start date is selected in a range calendar i.e. First date in the range\n  - `SELECTION_TYPES.middle` - When a date is in a range between start and end date i.e. Date in the middle of two dates\n  - `SELECTION_TYPES.end` - When an end date is selected in a range calendar i.e. Last date in the range",name:"selectionType",required:!1,type:{name:"SelectionTypes | undefined"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"{} | undefined"}},date:{defaultValue:null,description:"",name:"date",required:!0,type:{name:"Date"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendarDate.tsx#BpkScrollableCalendarDate"]={docgenInfo:BpkScrollableCalendarDate.__docgenInfo,name:"BpkScrollableCalendarDate",path:"packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendarDate.tsx#BpkScrollableCalendarDate"})}catch(__react_docgen_typescript_loader_error){}var bpk_component_text=__webpack_require__("./packages/bpk-component-text/index.ts"),bpk_react_utils=__webpack_require__("./packages/bpk-react-utils/index.ts"),_1="bpk-scrollable-calendar-grid-KmrAw",_2="bpk-scrollable-calendar-grid__title-zqsIg";const getClassName=(0,bpk_react_utils.fD)(BpkScrollableCalendarGrid_module_namespaceObject),BpkScrollableCalendarGrid=_ref=>{let{className,formatMonth,ignoreOutsideDate,month,...rest}=_ref;const classNames=getClassName("bpk-scrollable-calendar-grid",className);return(0,jsx_runtime.jsxs)("div",{className:classNames,children:[(0,jsx_runtime.jsx)("span",{className:getClassName("bpk-scrollable-calendar-grid__title"),children:(0,jsx_runtime.jsx)(bpk_component_text.A,{tagName:"h1",textStyle:bpk_component_text.r.heading4,children:formatMonth(month)})}),(0,jsx_runtime.jsx)(bpk_component_calendar.Mu,{month,ignoreOutsideDate:!0,...rest})]})},src_BpkScrollableCalendarGrid=BpkScrollableCalendarGrid;try{BpkScrollableCalendarGrid.displayName="BpkScrollableCalendarGrid",BpkScrollableCalendarGrid.__docgenInfo={description:"",displayName:"BpkScrollableCalendarGrid",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | null | undefined"}},dateModifiers:{defaultValue:null,description:"",name:"dateModifiers",required:!1,type:{name:"DateModifiers | undefined"}},focusedDate:{defaultValue:null,description:"",name:"focusedDate",required:!1,type:{name:"Date | null | undefined"}},cellClassName:{defaultValue:null,description:"",name:"cellClassName",required:!1,type:{name:"string | null | undefined"}},isKeyboardFocusable:{defaultValue:null,description:"",name:"isKeyboardFocusable",required:!1,type:{name:"boolean | undefined"}},markOutsideDays:{defaultValue:null,description:"",name:"markOutsideDays",required:!1,type:{name:"boolean | undefined"}},markToday:{defaultValue:null,description:"",name:"markToday",required:!1,type:{name:"boolean | undefined"}},maxDate:{defaultValue:null,description:"",name:"maxDate",required:!1,type:{name:"Date | undefined"}},minDate:{defaultValue:null,description:"",name:"minDate",required:!1,type:{name:"Date | undefined"}},onDateClick:{defaultValue:null,description:"",name:"onDateClick",required:!1,type:{name:"(() => void) | undefined"}},onDateKeyDown:{defaultValue:null,description:"",name:"onDateKeyDown",required:!1,type:{name:"(() => void) | undefined"}},preventKeyboardFocus:{defaultValue:null,description:"",name:"preventKeyboardFocus",required:!1,type:{name:"boolean | undefined"}},selectionConfiguration:{defaultValue:null,description:"An object to indicate which configuration of the calendar is being used. Choices are `single` date selection or `range` date selection.",name:"selectionConfiguration",required:!1,type:{name:"SelectionConfiguration | undefined"}},ignoreOutsideDate:{defaultValue:null,description:"",name:"ignoreOutsideDate",required:!1,type:{name:"boolean | undefined"}},dateProps:{defaultValue:null,description:"",name:"dateProps",required:!1,type:{name:"{} | undefined"}},DateComponent:{defaultValue:null,description:"",name:"DateComponent",required:!0,type:{name:"(ElementType | undefined) & ElementType"}},formatDateFull:{defaultValue:null,description:'A function to format a full, human-readable date, for example: "Monday, 8th January 2018".',name:"formatDateFull",required:!0,type:{name:"((date: Date) => string | Date) & ((date: Date) => string | Date)"}},month:{defaultValue:null,description:"",name:"month",required:!0,type:{name:"Date"}},weekStartsOn:{defaultValue:null,description:"First day of the week. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",name:"weekStartsOn",required:!0,type:{name:"0 | 1 | 2 | 3 | 4 | 5 | 6"}},formatMonth:{defaultValue:null,description:"",name:"formatMonth",required:!0,type:{name:"(date: Date) => ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendarGrid.tsx#BpkScrollableCalendarGrid"]={docgenInfo:BpkScrollableCalendarGrid.__docgenInfo,name:"BpkScrollableCalendarGrid",path:"packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendarGrid.tsx#BpkScrollableCalendarGrid"})}catch(__react_docgen_typescript_loader_error){}var react=__webpack_require__("./node_modules/react/index.js"),startOfDay=__webpack_require__("./packages/node_modules/date-fns/startOfDay.mjs"),startOfMonth=__webpack_require__("./packages/node_modules/date-fns/startOfMonth.mjs"),react_virtualized_auto_sizer_esm=__webpack_require__("./packages/node_modules/react-virtualized-auto-sizer/dist/react-virtualized-auto-sizer.esm.js"),index_esm=__webpack_require__("./packages/node_modules/react-window/dist/index.esm.js");var BpkScrollableCalendarGridList_module_1="bpk-scrollable-calendar-grid-list-SeM29";const BpkScrollableCalendarGridList_getClassName=(0,bpk_react_utils.fD)(BpkScrollableCalendarGridList_module_namespaceObject),BpkScrollableCalendarGridList=props=>{const{className=null,customRowHeight=2.75,focusedDate=null,minDate,selectionConfiguration,...rest}=props,listRef=(0,react.useRef)(null),startDate=(0,startOfDay.o)((0,startOfMonth.w)(minDate)),endDate=(0,startOfDay.o)((0,startOfMonth.w)(rest.maxDate)),monthsCount=bpk_component_calendar.Em.differenceInCalendarMonths(endDate,startDate),rowHeight=customRowHeight,estimatedMonthItemHeight=16*(8.125+5*rowHeight),[rootFontSize,setRootFontSize]=(0,react.useState)((()=>parseFloat(getComputedStyle(document.documentElement).fontSize)||16)),months=(0,react.useMemo)((()=>((startDate,count)=>{const months=[];for(let i=0;i<count+1;i+=1)months.push(bpk_component_calendar.Em.addMonths(startDate,i));return months})(startDate,monthsCount)),[minDate,monthsCount]),monthItemHeights=(0,react.useMemo)((()=>((months,weekStartsOn,columnCount,rowHeight,baseMonthItemHeight)=>months.map((month=>{const calendarGridSpaces=(month.getDay()+7-weekStartsOn)%7+bpk_component_calendar.Em.daysInMonth(month.getFullYear(),month.getMonth()),rowCount=Math.ceil(calendarGridSpaces/columnCount);return baseMonthItemHeight+rowHeight*rowCount})))(months,rest.weekStartsOn,7,rowHeight*rootFontSize,8.125*rootFontSize)),[rootFontSize,months,rest.weekStartsOn]);(0,react.useEffect)((()=>{listRef.current&&listRef.current.resetAfterIndex(0)}),[monthItemHeights]);const getItemSize=index=>monthItemHeights[index]||estimatedMonthItemHeight,rowRenderer=_ref=>{let{index,style}=_ref;return(0,jsx_runtime.jsx)("div",{style,children:(0,jsx_runtime.jsx)(src_BpkScrollableCalendarGrid,{onDateClick:rest.onDateClick,...rest,minDate,selectionConfiguration,month:months[index],focusedDate,preventKeyboardFocus:rest.preventKeyboardFocus,"aria-hidden":1!==index})})},calculateOffsetInPixels=numberOfMonths=>{let result=0;for(let i=0;i<numberOfMonths;i+=1)result+=getItemSize(i);return result},date=(null==selectionConfiguration?void 0:selectionConfiguration.type)===bpk_component_calendar.BH.single?null==selectionConfiguration?void 0:selectionConfiguration.date:null==selectionConfiguration?void 0:selectionConfiguration.startDate,selectedDate=focusedDate||date;return(0,jsx_runtime.jsx)("div",{className:BpkScrollableCalendarGridList_getClassName("bpk-scrollable-calendar-grid-list",className),children:(0,jsx_runtime.jsx)(react_virtualized_auto_sizer_esm.Ay,{onResize:()=>{const newRootFontSize=parseFloat(getComputedStyle(document.documentElement).fontSize)||16;setRootFontSize(newRootFontSize)},defaultHeight:estimatedMonthItemHeight,defaultWidth:910,children:_ref2=>{let{height,width}=_ref2;return(0,jsx_runtime.jsx)(index_esm._m,{style:"rtl"===("undefined"!=typeof document?document.querySelector("html"):{}).dir?{direction:"rtl"}:{},width,height,estimatedItemSize:estimatedMonthItemHeight,itemSize:getItemSize,itemCount:months.length,overscanCount:1,initialScrollOffset:calculateOffsetInPixels(selectedDate?bpk_component_calendar.Em.differenceInCalendarMonths(selectedDate,minDate):0),ref:listRef,children:rowRenderer})}})})},src_BpkScrollableCalendarGridList=BpkScrollableCalendarGridList;try{BpkScrollableCalendarGridList.displayName="BpkScrollableCalendarGridList",BpkScrollableCalendarGridList.__docgenInfo={description:"",displayName:"BpkScrollableCalendarGridList",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | null | undefined"}},dateModifiers:{defaultValue:null,description:"",name:"dateModifiers",required:!1,type:{name:"DateModifiers | undefined"}},focusedDate:{defaultValue:null,description:"",name:"focusedDate",required:!1,type:{name:"Date | null | undefined"}},cellClassName:{defaultValue:null,description:"",name:"cellClassName",required:!1,type:{name:"string | null | undefined"}},isKeyboardFocusable:{defaultValue:null,description:"",name:"isKeyboardFocusable",required:!1,type:{name:"boolean | undefined"}},markOutsideDays:{defaultValue:null,description:"",name:"markOutsideDays",required:!1,type:{name:"boolean | undefined"}},markToday:{defaultValue:null,description:"",name:"markToday",required:!1,type:{name:"boolean | undefined"}},maxDate:{defaultValue:null,description:"",name:"maxDate",required:!0,type:{name:"Date"}},minDate:{defaultValue:null,description:"",name:"minDate",required:!0,type:{name:"Date"}},onDateClick:{defaultValue:null,description:"",name:"onDateClick",required:!1,type:{name:"(() => void) | undefined"}},onDateKeyDown:{defaultValue:null,description:"",name:"onDateKeyDown",required:!1,type:{name:"(() => void) | undefined"}},preventKeyboardFocus:{defaultValue:null,description:"",name:"preventKeyboardFocus",required:!1,type:{name:"boolean | undefined"}},selectionConfiguration:{defaultValue:null,description:"An object to indicate which configuration of the calendar is being used. Choices are `single` date selection or `range` date selection.",name:"selectionConfiguration",required:!1,type:{name:"SelectionConfiguration | undefined"}},ignoreOutsideDate:{defaultValue:null,description:"",name:"ignoreOutsideDate",required:!1,type:{name:"boolean | undefined"}},dateProps:{defaultValue:null,description:"",name:"dateProps",required:!1,type:{name:"{} | undefined"}},DateComponent:{defaultValue:null,description:"",name:"DateComponent",required:!0,type:{name:"(ElementType | undefined) & ElementType"}},formatDateFull:{defaultValue:null,description:'A function to format a full, human-readable date, for example: "Monday, 8th January 2018".',name:"formatDateFull",required:!0,type:{name:"((date: Date) => string | Date) & ((date: Date) => string | Date)"}},month:{defaultValue:null,description:"",name:"month",required:!0,type:{name:"Date"}},weekStartsOn:{defaultValue:null,description:"First day of the week. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",name:"weekStartsOn",required:!0,type:{name:"0 | 1 | 2 | 3 | 4 | 5 | 6"}},formatMonth:{defaultValue:null,description:"",name:"formatMonth",required:!0,type:{name:"(date: Date) => ReactNode"}},customRowHeight:{defaultValue:null,description:"Sets the height of month rows in 'rem' units. If not specified, the default value of `2.75rem` will be used.",name:"customRowHeight",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendarGridList.tsx#BpkScrollableCalendarGridList"]={docgenInfo:BpkScrollableCalendarGridList.__docgenInfo,name:"BpkScrollableCalendarGridList",path:"packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendarGridList.tsx#BpkScrollableCalendarGridList"})}catch(__react_docgen_typescript_loader_error){}var endOfMonth=__webpack_require__("./node_modules/date-fns/endOfMonth.js"),date_fns_startOfMonth=__webpack_require__("./node_modules/date-fns/startOfMonth.js");const src_BpkScrollableCalendar=(0,bpk_component_calendar.WY)((0,bpk_component_calendar.bB)(null,bpk_component_calendar.NJ,src_BpkScrollableCalendarGridList,src_BpkScrollableCalendarDate));try{BpkScrollableCalendar.displayName="BpkScrollableCalendar",BpkScrollableCalendar.__docgenInfo={description:"",displayName:"BpkScrollableCalendar",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | null | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},changeMonthLabel:{defaultValue:null,description:"**Required** if Nav !== null",name:"changeMonthLabel",required:!1,type:{name:"string | null | undefined"}},daysOfWeek:{defaultValue:null,description:"An array of objects describing the days of the week",name:"daysOfWeek",required:!0,type:{name:"DaysOfWeek"}},formatDateFull:{defaultValue:null,description:'A function to format a full, human-readable date, for example: "Monday, 8th January 2018".',name:"formatDateFull",required:!0,type:{name:"(date: Date) => string | Date"}},formatMonth:{defaultValue:null,description:'A function to format a human-readable month, for example: "January 2018":\nIf you just need to quickly prototype, use the following from [`date-fns`](https://date-fns.org/docs/format#usage)',name:"formatMonth",required:!0,type:{name:"(date: Date) => string | Date"}},nextMonthLabel:{defaultValue:null,description:"**Required** if Nav !== null",name:"nextMonthLabel",required:!1,type:{name:"string | null | undefined"}},previousMonthLabel:{defaultValue:null,description:"**Required** if Nav !== null",name:"previousMonthLabel",required:!1,type:{name:"string | null | undefined"}},weekStartsOn:{defaultValue:null,description:"First day of the week. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",name:"weekStartsOn",required:!0,type:{name:"0 | 1 | 2 | 3 | 4 | 5 | 6"}},dateModifiers:{defaultValue:null,description:"",name:"dateModifiers",required:!1,type:{name:"DateModifiers | undefined"}},focusedDate:{defaultValue:null,description:"",name:"focusedDate",required:!1,type:{name:"Date | null | undefined"}},preventKeyboardFocus:{defaultValue:null,description:"",name:"preventKeyboardFocus",required:!1,type:{name:"boolean | undefined"}},gridClassName:{defaultValue:null,description:"",name:"gridClassName",required:!1,type:{name:"string | null | undefined"}},weekDayKey:{defaultValue:null,description:"Key to be used to pick the desired weekDay format from the `daysOfWeek` object, for example: `nameAbbr` or `nameNarrow`.",name:"weekDayKey",required:!1,type:{name:"string | undefined"}},navProps:{defaultValue:null,description:"This is useful if your custom implementation of Nav component requires additional properties. They will be passed, unmodified.",name:"navProps",required:!1,type:{name:"{} | null | undefined"}},headerProps:{defaultValue:null,description:"This is useful if your custom implementation of Header component requires additional properties. They will be passed, unmodified.",name:"headerProps",required:!1,type:{name:"{} | null | undefined"}},gridProps:{defaultValue:null,description:"This is useful if your custom implementation of Grid component requires additional properties. They will be passed, unmodified.",name:"gridProps",required:!1,type:{name:"{} | null | undefined"}},dateProps:{defaultValue:null,description:"This is useful if your custom implementation of Date component requires additional properties. They will be passed, unmodified.",name:"dateProps",required:!1,type:{name:"{} | null | undefined"}},onDateSelect:{defaultValue:null,description:"",name:"onDateSelect",required:!1,type:{name:"((date: Date, newDate?: Date | undefined) => void) | null | undefined"}},initiallyFocusedDate:{defaultValue:null,description:"Sets the date that is focused initially, this prop has no effect if `selectionConfiguration` is specified in which case the date specified in this prop is focused. If no selected date is set and `initiallyFocusedDate` is not set the focused date is the `minDate`(defaults to today if it has not been explicitly set).",name:"initiallyFocusedDate",required:!1,type:{name:"Date | null | undefined"}},markOutsideDays:{defaultValue:null,description:"",name:"markOutsideDays",required:!1,type:{name:"boolean | undefined"}},markToday:{defaultValue:null,description:"",name:"markToday",required:!1,type:{name:"boolean | undefined"}},selectionConfiguration:{defaultValue:null,description:"An object to indicate which configuration of the calendar is being used. Choices are `single` date selection or `range` date selection.",name:"selectionConfiguration",required:!1,type:{name:"SelectionConfiguration | undefined"}},customRowHeight:{defaultValue:null,description:"Sets the height of month rows in 'rem' units. If not specified, the default value of `2.75rem` will be used.",name:"customRowHeight",required:!1,type:{name:"number | undefined"}},onMonthChange:{defaultValue:null,description:"",name:"onMonthChange",required:!1,type:{name:"(((event: UIEvent, { month, source }: { month: Date; source: string; }) => void) & ((event: UIEvent, { month, source }: { month: Date; source: string; }) => void)) | null | undefined"}},fixedWidth:{defaultValue:null,description:"If set to true (default), it sets a fixed width on the calendar container. This is necessary to support transitions and to create the right size for the Datepicker component.\nIf set to false, the calendar is of fluid width and will take up the space of its parent container.",name:"fixedWidth",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendar.tsx#BpkScrollableCalendar"]={docgenInfo:BpkScrollableCalendar.__docgenInfo,name:"BpkScrollableCalendar",path:"packages/bpk-component-scrollable-calendar/src/BpkScrollableCalendar.tsx#BpkScrollableCalendar"})}catch(__react_docgen_typescript_loader_error){}const bpk_component_scrollable_calendar=src_BpkScrollableCalendar;var bpk_storybook_utils=__webpack_require__("./examples/bpk-storybook-utils/index.js"),format=__webpack_require__("./node_modules/date-fns/format.js");const formatDateFull=date=>(0,format.GP)(date,"EEEE, do MMMM yyyy"),formatDateFullArabic=date=>{const newString="EEEE, dd، MMMM، yyyy".replace("yyyy",date.getUTCFullYear());return(0,format.GP)(date,newString)},formatDateFullJapanese=date=>{const newString="Y年M月d日EEEE".replace("Y",date.getUTCFullYear());return(0,format.GP)(date,newString)},formatMonth=date=>(0,format.GP)(date,"MMMM yyyy"),formatMonthArabic=date=>"".concat(["يناير","فبراير","مارس","أبريل","مايو","يونيو","يوليو","أغسطس","سبتمبر","أكتوبر","نوفمبر","ديسمبر"][date.getMonth()]," ").concat(date.getFullYear()),formatMonthJapanese=date=>"".concat(date.getFullYear(),"年").concat(["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"][date.getMonth()]),weekDays=[{name:"Sunday",nameAbbr:"Sun",index:0,isWeekend:!0},{name:"Monday",nameAbbr:"Mon",index:1,isWeekend:!1},{name:"Tuesday",nameAbbr:"Tue",index:2,isWeekend:!1},{name:"Wednesday",nameAbbr:"Wed",index:3,isWeekend:!1},{name:"Thursday",nameAbbr:"Thu",index:4,isWeekend:!1},{name:"Friday",nameAbbr:"Fri",index:5,isWeekend:!1},{name:"Saturday",nameAbbr:"Sat",index:6,isWeekend:!0}],weekDaysMoreWeekend=[{name:"Sunday",nameAbbr:"Sun",index:0,isWeekend:!0},{name:"Monday",nameAbbr:"Mon",index:1,isWeekend:!1},{name:"Tuesday",nameAbbr:"Tue",index:2,isWeekend:!1},{name:"Wednesday",nameAbbr:"Wed",index:3,isWeekend:!1},{name:"Thursday",nameAbbr:"Thu",index:4,isWeekend:!1},{name:"Friday",nameAbbr:"Fri",index:5,isWeekend:!0},{name:"Saturday",nameAbbr:"Sat",index:6,isWeekend:!0}],weekDaysArabic=[{name:"الأحد",nameAbbr:"الأحد",nameShort:"الأحد",index:0,cldrKey:"sun",isWeekend:!1},{name:"الاثنين",nameAbbr:"الاثنين",nameShort:"الاثنين",index:1,cldrKey:"mon",isWeekend:!1},{name:"الثلاثاء",nameAbbr:"الثلاثاء",nameShort:"الثلاثاء",index:2,cldrKey:"tue",isWeekend:!1},{name:"الأربعاء",nameAbbr:"الأربعاء",nameShort:"الأربعاء",index:3,cldrKey:"wed",isWeekend:!1},{name:"الخميس",nameAbbr:"الخميس",nameShort:"الخميس",index:4,cldrKey:"thu",isWeekend:!1},{name:"الجمعة",nameAbbr:"الجمعة",nameShort:"الجمعة",index:5,cldrKey:"fri",isWeekend:!0},{name:"السبت",nameAbbr:"السبت",nameShort:"السبت",index:6,cldrKey:"sat",isWeekend:!0}],weekDaysJapanese=[{name:"日曜日",nameAbbr:"日",nameShort:"日",index:0,cldrKey:"sun",isWeekend:!0},{name:"月曜日",nameAbbr:"月",nameShort:"月",index:1,cldrKey:"mon",isWeekend:!1},{name:"火曜日",nameAbbr:"火",nameShort:"火",index:2,cldrKey:"tue",isWeekend:!1},{name:"水曜日",nameAbbr:"水",nameShort:"水",index:3,cldrKey:"wed",isWeekend:!1},{name:"木曜日",nameAbbr:"木",nameShort:"木",index:4,cldrKey:"thu",isWeekend:!1},{name:"金曜日",nameAbbr:"金",nameShort:"金",index:5,cldrKey:"fri",isWeekend:!1},{name:"土曜日",nameAbbr:"土",nameShort:"土",index:6,cldrKey:"sat",isWeekend:!0}];class ScrollableCal extends react.Component{constructor(props){super(props),"range"===this.props.selectionConfiguration.type?this.state={selectionConfiguration:{type:this.props.selectionConfiguration.type,startDate:this.props.selectionConfiguration.startDate,endDate:this.props.selectionConfiguration.endDate}}:this.state={selectionConfiguration:{type:this.props.selectionConfiguration.type,date:this.props.selectionConfiguration.date}}}render(){var _this=this;return(0,jsx_runtime.jsx)(bpk_component_scrollable_calendar,{id:"calendar",...this.props,onDateSelect:function(startDate){let endDate=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;"range"===_this.props.selectionConfiguration.type?(startDate&&!endDate&&(_this.setState({selectionConfiguration:{type:_this.props.selectionConfiguration.type,startDate,endDate:null}}),(0,bpk_storybook_utils.XI)("Selected day")(startDate)),startDate&&endDate&&(_this.setState({selectionConfiguration:{type:_this.props.selectionConfiguration.type,startDate,endDate}}),(0,bpk_storybook_utils.XI)("Selected end day")(endDate))):(_this.setState({selectionConfiguration:{type:_this.props.selectionConfiguration.type,date:startDate}}),(0,bpk_storybook_utils.XI)("Selected day")(startDate))},selectionConfiguration:this.state.selectionConfiguration})}}ScrollableCal.propTypes={selectionConfiguration:bpk_component_calendar.cd.SelectionConfiguration},ScrollableCal.defaultProps={selectionConfiguration:{type:bpk_component_calendar.BH.single,date:new Date}};const DefaultExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:bpk_component_calendar.BH.single,date:new Date(2020,3,15)}}),DefaultExampleWithCustomHeight=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:bpk_component_calendar.BH.single,date:new Date(2020,3,15)},customRowHeight:3}),RangeExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,markToday:!1,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:"range",startDate:new Date(2020,5,7),endDate:new Date(2020,5,15)}}),SplitWeekRangeExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{DateComponent:src_BpkScrollableCalendarDate,formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:0,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1),selectionConfiguration:{type:"range",startDate:new Date(2020,3,29),endDate:new Date(2020,4,4)}}),WeekStartsOnSixExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:6,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),WithFocusedDateExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),focusedDate:bpk_component_calendar.Em.addMonths(new Date,11),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),TallContainerExample=()=>(0,jsx_runtime.jsx)("div",{style:{height:"500px",display:"flex"},children:(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)})}),SingleMonthExample=()=>(0,jsx_runtime.jsx)("div",{style:{height:"500px",display:"flex"},children:(0,jsx_runtime.jsx)(ScrollableCal,{weekStartsOn:1,daysOfWeek:weekDays,formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:(0,date_fns_startOfMonth.w)(new Date),maxDate:(0,endOfMonth.p)(new Date)})}),ScrollableCalendarDateExample=()=>(0,jsx_runtime.jsx)(src_BpkScrollableCalendarDate,{date:new Date,onDateClick:(0,bpk_storybook_utils.XI)("Clicked day")}),ScrollableCalendarGridExample=()=>(0,jsx_runtime.jsx)(src_BpkScrollableCalendarGrid,{month:new Date(2019,1,0),weekStartsOn:1,daysOfWeek:weekDays,onDateClick:(0,bpk_storybook_utils.XI)("Clicked day"),formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate}),ScrollableCalendarGridListExample=()=>(0,jsx_runtime.jsx)(src_BpkScrollableCalendarGridList,{month:new Date,weekStartsOn:1,daysOfWeek:weekDays,onDateClick:(0,bpk_storybook_utils.XI)("Clicked day"),formatMonth,formatDateFull,DateComponent:src_BpkScrollableCalendarDate,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),WeekStartsOnSundayExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:0,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),HonestWeekendExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDaysMoreWeekend,weekStartsOn:1,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),ArabicLocaleExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth:formatMonthArabic,formatDateFull:formatDateFullArabic,daysOfWeek:weekDaysArabic,weekStartsOn:6,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),JapaneseLocaleExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth:formatMonthJapanese,formatDateFull:formatDateFullJapanese,daysOfWeek:weekDaysJapanese,weekStartsOn:0,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),DifferentMinMaxDatesExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:1,minDate:new Date(2020,4,15),maxDate:new Date(2020,5,15)}),DontMarkTodayExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:1,markToday:!1,minDate:bpk_component_calendar.Em.addDays(new Date,-1),maxDate:bpk_component_calendar.Em.addMonths(new Date,12)}),PastCalendarExample=()=>(0,jsx_runtime.jsx)(ScrollableCal,{id:"myCalendar",formatMonth,formatDateFull,daysOfWeek:weekDays,weekStartsOn:1,markToday:!1,minDate:new Date(2020,3,1),maxDate:new Date(2020,6,1)});DefaultExample.__docgenInfo={description:"",methods:[],displayName:"DefaultExample"},DefaultExampleWithCustomHeight.__docgenInfo={description:"",methods:[],displayName:"DefaultExampleWithCustomHeight"},RangeExample.__docgenInfo={description:"",methods:[],displayName:"RangeExample"},SplitWeekRangeExample.__docgenInfo={description:"",methods:[],displayName:"SplitWeekRangeExample"},WeekStartsOnSixExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSixExample"},WithFocusedDateExample.__docgenInfo={description:"",methods:[],displayName:"WithFocusedDateExample"},TallContainerExample.__docgenInfo={description:"",methods:[],displayName:"TallContainerExample"},SingleMonthExample.__docgenInfo={description:"",methods:[],displayName:"SingleMonthExample"},WeekStartsOnSundayExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSundayExample"},HonestWeekendExample.__docgenInfo={description:"",methods:[],displayName:"HonestWeekendExample"},ArabicLocaleExample.__docgenInfo={description:"",methods:[],displayName:"ArabicLocaleExample"},JapaneseLocaleExample.__docgenInfo={description:"",methods:[],displayName:"JapaneseLocaleExample"},DifferentMinMaxDatesExample.__docgenInfo={description:"",methods:[],displayName:"DifferentMinMaxDatesExample"},DontMarkTodayExample.__docgenInfo={description:"",methods:[],displayName:"DontMarkTodayExample"},ScrollableCalendarDateExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarDateExample"},ScrollableCalendarGridExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridExample"},ScrollableCalendarGridListExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridListExample"},PastCalendarExample.__docgenInfo={description:"",methods:[],displayName:"PastCalendarExample"},ScrollableCal.__docgenInfo={description:"",methods:[],displayName:"ScrollableCal",props:{selectionConfiguration:{defaultValue:{value:"{\n  type: CALENDAR_SELECTION_TYPE.single,\n  date: new Date(),\n}",computed:!1},description:"",type:{name:"union",value:[{name:"custom",raw:"SelectionConfigurationSingle"},{name:"custom",raw:"SelectionConfigurationRange"}]},required:!1}}},DefaultExample.__docgenInfo={description:"",methods:[],displayName:"DefaultExample"},DefaultExampleWithCustomHeight.__docgenInfo={description:"",methods:[],displayName:"DefaultExampleWithCustomHeight"},RangeExample.__docgenInfo={description:"",methods:[],displayName:"RangeExample"},SplitWeekRangeExample.__docgenInfo={description:"",methods:[],displayName:"SplitWeekRangeExample"},WeekStartsOnSixExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSixExample"},WithFocusedDateExample.__docgenInfo={description:"",methods:[],displayName:"WithFocusedDateExample"},TallContainerExample.__docgenInfo={description:"",methods:[],displayName:"TallContainerExample"},SingleMonthExample.__docgenInfo={description:"",methods:[],displayName:"SingleMonthExample"},WeekStartsOnSundayExample.__docgenInfo={description:"",methods:[],displayName:"WeekStartsOnSundayExample"},HonestWeekendExample.__docgenInfo={description:"",methods:[],displayName:"HonestWeekendExample"},ArabicLocaleExample.__docgenInfo={description:"",methods:[],displayName:"ArabicLocaleExample"},JapaneseLocaleExample.__docgenInfo={description:"",methods:[],displayName:"JapaneseLocaleExample"},DifferentMinMaxDatesExample.__docgenInfo={description:"",methods:[],displayName:"DifferentMinMaxDatesExample"},DontMarkTodayExample.__docgenInfo={description:"",methods:[],displayName:"DontMarkTodayExample"},ScrollableCalendarDateExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarDateExample"},ScrollableCalendarGridExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridExample"},ScrollableCalendarGridListExample.__docgenInfo={description:"",methods:[],displayName:"ScrollableCalendarGridListExample"},PastCalendarExample.__docgenInfo={description:"",methods:[],displayName:"PastCalendarExample"},ScrollableCal.__docgenInfo={description:"",methods:[],displayName:"ScrollableCal",props:{selectionConfiguration:{defaultValue:{value:"{\n  type: CALENDAR_SELECTION_TYPE.single,\n  date: new Date(),\n}",computed:!1},description:"",type:{name:"custom",raw:"CustomPropTypes.SelectionConfiguration"},required:!1}}};const BpkScrollableCalendarMock=props=>(0,jsx_runtime.jsx)("div",{});try{BpkScrollableCalendarMock.displayName="BpkScrollableCalendarMock",BpkScrollableCalendarMock.__docgenInfo={description:"",displayName:"BpkScrollableCalendarMock",props:{changeMonthLabel:{defaultValue:null,description:"**Required** if Nav !== null",name:"changeMonthLabel",required:!1,type:{name:"string | null | undefined"}},daysOfWeek:{defaultValue:null,description:"An array of objects describing the days of the week",name:"daysOfWeek",required:!0,type:{name:"DaysOfWeek"}},formatDateFull:{defaultValue:null,description:'A function to format a full, human-readable date, for example: "Monday, 8th January 2018".',name:"formatDateFull",required:!0,type:{name:"(date: Date) => string | Date"}},formatMonth:{defaultValue:null,description:'A function to format a human-readable month, for example: "January 2018":\nIf you just need to quickly prototype, use the following from [`date-fns`](https://date-fns.org/docs/format#usage)',name:"formatMonth",required:!0,type:{name:"(date: Date) => string | Date"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},maxDate:{defaultValue:null,description:"",name:"maxDate",required:!1,type:{name:"Date"}},minDate:{defaultValue:null,description:"",name:"minDate",required:!1,type:{name:"Date"}},month:{defaultValue:null,description:"",name:"month",required:!0,type:{name:"Date"}},nextMonthLabel:{defaultValue:null,description:"**Required** if Nav !== null",name:"nextMonthLabel",required:!1,type:{name:"string | null | undefined"}},previousMonthLabel:{defaultValue:null,description:"**Required** if Nav !== null",name:"previousMonthLabel",required:!1,type:{name:"string | null | undefined"}},weekStartsOn:{defaultValue:null,description:"First day of the week. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",name:"weekStartsOn",required:!0,type:{name:"0 | 1 | 2 | 3 | 4 | 5 | 6"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | null | undefined"}},dateModifiers:{defaultValue:null,description:"",name:"dateModifiers",required:!1,type:{name:"DateModifiers | undefined"}},fixedWidth:{defaultValue:null,description:"If set to true (default), it sets a fixed width on the calendar container. This is necessary to support transitions and to create the right size for the Datepicker component.\nIf set to false, the calendar is of fluid width and will take up the space of its parent container.",name:"fixedWidth",required:!1,type:{name:"boolean | undefined"}},focusedDate:{defaultValue:null,description:"",name:"focusedDate",required:!1,type:{name:"Date | null | undefined"}},markOutsideDays:{defaultValue:null,description:"",name:"markOutsideDays",required:!1,type:{name:"boolean | undefined"}},markToday:{defaultValue:null,description:"",name:"markToday",required:!1,type:{name:"boolean | undefined"}},onMonthChange:{defaultValue:null,description:"",name:"onMonthChange",required:!1,type:{name:"(((event: UIEvent, { month, source }: { month: Date; source: string; }) => void) & ((event: UIEvent, { month, source }: { month: Date; source: string; }) => void)) | null | undefined"}},onDateClick:{defaultValue:null,description:"",name:"onDateClick",required:!1,type:{name:"((date: Date) => void) | null | undefined"}},onDateKeyDown:{defaultValue:null,description:"",name:"onDateKeyDown",required:!1,type:{name:"((event: KeyboardEvent) => void) | null | undefined"}},preventKeyboardFocus:{defaultValue:null,description:"",name:"preventKeyboardFocus",required:!1,type:{name:"boolean | undefined"}},selectionConfiguration:{defaultValue:null,description:"An object to indicate which configuration of the calendar is being used. Choices are `single` date selection or `range` date selection.",name:"selectionConfiguration",required:!1,type:{name:"SelectionConfiguration | undefined"}},gridClassName:{defaultValue:null,description:"",name:"gridClassName",required:!1,type:{name:"string | null | undefined"}},customRowHeight:{defaultValue:null,description:"Sets the height of month rows in 'rem' units. If not specified, the default value of `2.75rem` will be used.",name:"customRowHeight",required:!1,type:{name:"number | undefined"}},weekDayKey:{defaultValue:null,description:"Key to be used to pick the desired weekDay format from the `daysOfWeek` object, for example: `nameAbbr` or `nameNarrow`.",name:"weekDayKey",required:!1,type:{name:"string | undefined"}},navProps:{defaultValue:null,description:"This is useful if your custom implementation of Nav component requires additional properties. They will be passed, unmodified.",name:"navProps",required:!1,type:{name:"{} | null | undefined"}},headerProps:{defaultValue:null,description:"This is useful if your custom implementation of Header component requires additional properties. They will be passed, unmodified.",name:"headerProps",required:!1,type:{name:"{} | null | undefined"}},gridProps:{defaultValue:null,description:"This is useful if your custom implementation of Grid component requires additional properties. They will be passed, unmodified.",name:"gridProps",required:!1,type:{name:"{} | null | undefined"}},dateProps:{defaultValue:null,description:"This is useful if your custom implementation of Date component requires additional properties. They will be passed, unmodified.",name:"dateProps",required:!1,type:{name:"{} | null | undefined"}},onDateSelect:{defaultValue:null,description:"",name:"onDateSelect",required:!1,type:{name:"((date: Date, newDate?: Date | undefined) => void) | null | undefined"}},initiallyFocusedDate:{defaultValue:null,description:"Sets the date that is focused initially, this prop has no effect if `selectionConfiguration` is specified in which case the date specified in this prop is focused. If no selected date is set and `initiallyFocusedDate` is not set the focused date is the `minDate`(defaults to today if it has not been explicitly set).",name:"initiallyFocusedDate",required:!1,type:{name:"Date | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["examples/bpk-component-scrollable-calendar/stories-utils.tsx#BpkScrollableCalendarMock"]={docgenInfo:BpkScrollableCalendarMock.__docgenInfo,name:"BpkScrollableCalendarMock",path:"examples/bpk-component-scrollable-calendar/stories-utils.tsx#BpkScrollableCalendarMock"})}catch(__react_docgen_typescript_loader_error){}const stories={title:"bpk-component-scrollable-calendar",component:src_BpkScrollableCalendarGridList,subcomponents:{BpkScrollableCalendarDate:src_BpkScrollableCalendarDate,BpkScrollableCalendarGrid:src_BpkScrollableCalendarGrid,BpkScrollableCalendar:BpkScrollableCalendarMock}},ScrollableCalendarDefault=DefaultExample,ScrollableCalendarRange=RangeExample,ScrollableCalendarWeekSplitAcross2MonthsRange=SplitWeekRangeExample,ScrollableCalendarWeekStartsOn6=WeekStartsOnSixExample,ScrollableCalendarWithFocusedDate=WithFocusedDateExample,ScrollableCalendarInATallContainer=TallContainerExample,ScrollableCalendarWithASingleMonth=SingleMonthExample,ScrollableCalendarWeekStartsOnASunday=WeekStartsOnSundayExample,ScrollableCalendarHonestWeekend=HonestWeekendExample,ScrollableCalendarArAeLocale=ArabicLocaleExample,ScrollableCalendarJaJpLocale=JapaneseLocaleExample,ScrollableCalendarDifferentMinMaxDate=DifferentMinMaxDatesExample,ScrollableCalendarDontMarkToday=DontMarkTodayExample,PastCalendar=PastCalendarExample,stories_BpkScrollableCalendarDate=ScrollableCalendarDateExample,stories_BpkScrollableCalendarGrid=ScrollableCalendarGridExample,stories_BpkScrollableCalendarGridList=ScrollableCalendarGridListExample,VisualTest=DefaultExample,VisualTestWithZoom=VisualTest.bind({});VisualTestWithZoom.args={zoomEnabled:!0};const VisualTestWithCustomHeight=DefaultExampleWithCustomHeight,VisualTestWithCustomHeightWithZoom=VisualTestWithCustomHeight.bind({});VisualTestWithCustomHeightWithZoom.args={zoomEnabled:!0};const VisualTestRange=RangeExample,VisualTestRangeWithZoom=VisualTestRange.bind({});VisualTestRangeWithZoom.args={zoomEnabled:!0}},"./packages/bpk-component-select/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./packages/bpk-component-select/src/BpkSelect.js").A},"./packages/bpk-component-select/src/BpkSelect.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>src_BpkSelect});var BpkSelect_module_namespaceObject={};__webpack_require__.r(BpkSelect_module_namespaceObject),__webpack_require__.d(BpkSelect_module_namespaceObject,{"bpk-select":()=>_1,"bpk-select--docked":()=>_2,"bpk-select--docked-first":()=>_3,"bpk-select--docked-last":()=>_4,"bpk-select--docked-middle":()=>_5,"bpk-select--invalid":()=>_6,"bpk-select--large":()=>_7,"bpk-select--with-image":()=>_8,"bpk-select--with-image-large":()=>_9,"bpk-select-wrapper":()=>_a,"bpk-select-wrapper__image":()=>_b,"bpk-select-wrapper__image--disabled":()=>_c,"bpk-select-wrapper__image--large":()=>_d});var prop_types=__webpack_require__("./packages/node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),bpk_react_utils=__webpack_require__("./packages/bpk-react-utils/index.ts"),_1="bpk-select-joGcJ",_2="bpk-select--docked-rs0od",_3="bpk-select--docked-first-mDHwQ",_4="bpk-select--docked-last-Za426",_5="bpk-select--docked-middle-_JjI5",_6="bpk-select--invalid-KW29S",_7="bpk-select--large-JUO0S",_8="bpk-select--with-image-r5fxW",_9="bpk-select--with-image-large-vYjLW",_a="bpk-select-wrapper-IXaXq",_b="bpk-select-wrapper__image-EvZM7",_c="bpk-select-wrapper__image--disabled-JXQox",_d="bpk-select-wrapper__image--large-DqsHM",jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const getClassName=(0,bpk_react_utils.fD)(BpkSelect_module_namespaceObject),BpkSelect=props=>{const{className,disabled,docked,dockedFirst,dockedLast,dockedMiddle,image,large,valid,wrapperClassName,...rest}=props,isInvalid=!1===valid,select=(0,jsx_runtime.jsx)("select",{className:getClassName("bpk-select",large&&"bpk-select--large",docked&&"bpk-select--docked",dockedFirst&&"bpk-select--docked-first",dockedMiddle&&"bpk-select--docked-middle",dockedLast&&"bpk-select--docked-last",isInvalid&&"bpk-select--invalid",image&&"bpk-select--with-image",image&&large&&"bpk-select--with-image-large",className),disabled,"aria-invalid":isInvalid,...rest});return image?(0,jsx_runtime.jsxs)("div",{className:getClassName("bpk-select-wrapper",wrapperClassName),children:[(0,react.cloneElement)(image,{"aria-hidden":!0,className:getClassName("bpk-select-wrapper__image",large&&"bpk-select-wrapper__image--large",disabled&&"bpk-select-wrapper__image--disabled",image.props.className)}),select]}):select};BpkSelect.propTypes={id:prop_types_default().string.isRequired,name:prop_types_default().string.isRequired,value:prop_types_default().string,className:prop_types_default().string,disabled:prop_types_default().bool,docked:prop_types_default().bool,dockedFirst:prop_types_default().bool,dockedLast:prop_types_default().bool,dockedMiddle:prop_types_default().bool,image:prop_types_default().node,large:prop_types_default().bool,valid:prop_types_default().bool,wrapperClassName:prop_types_default().string},BpkSelect.defaultProps={className:null,docked:!1,dockedFirst:!1,dockedLast:!1,dockedMiddle:!1,disabled:!1,image:null,large:!1,valid:null,wrapperClassName:null},BpkSelect.__docgenInfo={description:"",methods:[],displayName:"BpkSelect",props:{className:{defaultValue:{value:"null",computed:!1},required:!1,flowType:{name:"string",nullable:!0},description:"",type:{name:"string"}},docked:{defaultValue:{value:"false",computed:!1},required:!1,flowType:{name:"boolean"},description:"",type:{name:"bool"}},dockedFirst:{defaultValue:{value:"false",computed:!1},required:!1,flowType:{name:"boolean"},description:"",type:{name:"bool"}},dockedLast:{defaultValue:{value:"false",computed:!1},required:!1,flowType:{name:"boolean"},description:"",type:{name:"bool"}},dockedMiddle:{defaultValue:{value:"false",computed:!1},required:!1,flowType:{name:"boolean"},description:"",type:{name:"bool"}},disabled:{defaultValue:{value:"false",computed:!1},required:!1,flowType:{name:"boolean"},description:"",type:{name:"bool"}},image:{defaultValue:{value:"null",computed:!1},required:!1,flowType:{name:"Element",elements:[{name:"any"}],raw:"Element<any>",nullable:!0},description:"",type:{name:"node"}},large:{defaultValue:{value:"false",computed:!1},required:!1,flowType:{name:"boolean"},description:"",type:{name:"bool"}},valid:{defaultValue:{value:"null",computed:!1},required:!1,flowType:{name:"boolean",nullable:!0},description:"",type:{name:"bool"}},wrapperClassName:{defaultValue:{value:"null",computed:!1},required:!1,flowType:{name:"string",nullable:!0},description:"",type:{name:"string"}},id:{required:!0,flowType:{name:"string"},description:"",type:{name:"string"}},name:{required:!0,flowType:{name:"string"},description:"",type:{name:"string"}},value:{required:!1,flowType:{name:"string"},description:'The "value" prop is only relevant if the user is wanting a controlled component\nIn some cases, users may want to create an uncontrolled select as described here: https://beta.reactjs.org/reference/react-dom/components/select\nIn this case value is not required and nor should it be given a default value (as the linter thinks)\nProp types are not expressive enough (without a drastic increase in complexity of writing a custom validator) to encode this relationship. Equally, this wouldn\'t actually solve the linting issue (AFAIK).\nAs a solution, the require-default-props has been disabled for this line.',type:{name:"string"}}}};const src_BpkSelect=BpkSelect;BpkSelect.__docgenInfo={description:"",methods:[],displayName:"BpkSelect",props:{id:{required:!0,flowType:{name:"string"},description:"",type:{name:"string"}},name:{required:!0,flowType:{name:"string"},description:"",type:{name:"string"}},value:{required:!1,flowType:{name:"string"},description:'The "value" prop is only relevant if the user is wanting a controlled component\nIn some cases, users may want to create an uncontrolled select as described here: https://beta.reactjs.org/reference/react-dom/components/select\nIn this case value is not required and nor should it be given a default value (as the linter thinks)\nProp types are not expressive enough (without a drastic increase in complexity of writing a custom validator) to encode this relationship. Equally, this wouldn\'t actually solve the linting issue (AFAIK).\nAs a solution, the require-default-props has been disabled for this line.',type:{name:"string"}},className:{required:!1,flowType:{name:"string",nullable:!0},description:"",defaultValue:{value:"null",computed:!1},type:{name:"string"}},disabled:{required:!1,flowType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},docked:{required:!1,flowType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},dockedFirst:{required:!1,flowType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},dockedLast:{required:!1,flowType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},dockedMiddle:{required:!1,flowType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},image:{required:!1,flowType:{name:"Element",elements:[{name:"any"}],raw:"Element<any>",nullable:!0},description:"",defaultValue:{value:"null",computed:!1},type:{name:"node"}},large:{required:!1,flowType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1},type:{name:"bool"}},valid:{required:!1,flowType:{name:"boolean",nullable:!0},description:"",defaultValue:{value:"null",computed:!1},type:{name:"bool"}},wrapperClassName:{required:!1,flowType:{name:"string",nullable:!0},description:"",defaultValue:{value:"null",computed:!1},type:{name:"string"}}}}}}]);