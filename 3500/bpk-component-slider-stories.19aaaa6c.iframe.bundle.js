"use strict";(self.webpackChunkbackpack=self.webpackChunkbackpack||[]).push([[4968],{"./examples/bpk-component-slider/stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RangeSlider:()=>RangeSlider,RangeSliderWithMinimumDistance:()=>RangeSliderWithMinimumDistance,SimpleSlider:()=>SimpleSlider,SimpleSliderWithSteps:()=>SimpleSliderWithSteps,TimeSlider:()=>TimeSlider,VisualTest:()=>VisualTest,VisualTestWithZoom:()=>VisualTestWithZoom,default:()=>stories});var dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),blocks_dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),BpkSlider=__webpack_require__("./packages/bpk-component-slider/src/BpkSlider.tsx"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("./node_modules/react/index.js"),bpk_component_rtl_toggle=__webpack_require__("./packages/bpk-component-rtl-toggle/index.ts"),bpk_component_slider=__webpack_require__("./packages/bpk-component-slider/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}class SliderContainer extends react.Component{constructor(props){super(),_defineProperty(this,"handleChange",(value=>{this.setState({value})})),_defineProperty(this,"valueTimeFormatter",(value=>"12:".concat(value.toString().padStart(2,"0"),"pm"))),_defineProperty(this,"valueComponent",((min,max,formatter)=>(0,jsx_runtime.jsxs)("p",{children:[formatter?formatter(min):min," - ",formatter?formatter(max):max]}))),this.state={value:props.value||50}}render(){const min=this.props.min||0,time=!!this.props.time;return(0,jsx_runtime.jsxs)("div",{children:[this.state.value.length?this.valueComponent(this.state.value[0],this.state.value[1],time&&this.valueTimeFormatter):this.valueComponent(min,this.state.value,time&&this.valueTimeFormatter),(0,jsx_runtime.jsx)(bpk_component_slider.A,{min,max:time?59:100,step:1,onChange:this.handleChange,...this.props,value:this.state.value,ariaLabel:["minimum","maximum"],ariaValuetext:[this.state.value[0],this.state.value[1]]}),(0,jsx_runtime.jsx)("br",{})]})}}SliderContainer.propTypes={time:prop_types_default().bool,min:prop_types_default().number.isRequired,value:prop_types_default().oneOfType([prop_types_default().arrayOf(prop_types_default().number),prop_types_default().number]).isRequired},SliderContainer.defaultProps={time:!1};const EnhancedSlider=(0,bpk_component_rtl_toggle.i)(SliderContainer),SimpleSliderExample=()=>(0,jsx_runtime.jsx)(EnhancedSlider,{min:0,value:50}),TimeSliderExample=()=>(0,jsx_runtime.jsx)(EnhancedSlider,{time:!0,min:0,value:50}),SimpleSliderWithStepsExample=()=>(0,jsx_runtime.jsx)(EnhancedSlider,{min:0,value:50,step:10}),RangeSliderExample=()=>(0,jsx_runtime.jsx)(EnhancedSlider,{min:0,value:[20,80]}),RangeSliderWithMinimumDistanceExample=()=>(0,jsx_runtime.jsx)(EnhancedSlider,{min:0,value:[20,80],minDistance:10}),MixedExample=()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(SimpleSliderExample,{}),(0,jsx_runtime.jsx)(RangeSliderExample,{})]});SimpleSliderExample.__docgenInfo={description:"",methods:[],displayName:"SimpleSliderExample"},TimeSliderExample.__docgenInfo={description:"",methods:[],displayName:"TimeSliderExample"},SimpleSliderWithStepsExample.__docgenInfo={description:"",methods:[],displayName:"SimpleSliderWithStepsExample"},RangeSliderExample.__docgenInfo={description:"",methods:[],displayName:"RangeSliderExample"},RangeSliderWithMinimumDistanceExample.__docgenInfo={description:"",methods:[],displayName:"RangeSliderWithMinimumDistanceExample"},MixedExample.__docgenInfo={description:"",methods:[],displayName:"MixedExample"},SimpleSliderExample.__docgenInfo={description:"",methods:[],displayName:"SimpleSliderExample"},TimeSliderExample.__docgenInfo={description:"",methods:[],displayName:"TimeSliderExample"},SimpleSliderWithStepsExample.__docgenInfo={description:"",methods:[],displayName:"SimpleSliderWithStepsExample"},RangeSliderExample.__docgenInfo={description:"",methods:[],displayName:"RangeSliderExample"},RangeSliderWithMinimumDistanceExample.__docgenInfo={description:"",methods:[],displayName:"RangeSliderWithMinimumDistanceExample"},MixedExample.__docgenInfo={description:"",methods:[],displayName:"MixedExample"};const stories={title:"bpk-component-slider",component:BpkSlider.A,parameters:{docs:{page:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks_dist.hE,{}),(0,jsx_runtime.jsx)(dist.ov,{exclude:["zoomEnabled"]}),(0,jsx_runtime.jsx)(blocks_dist.oz,{children:"\n              **Note**: minDistance and step props are multiplied to calculate the minimum distance allowed between thumbs\n\n            **Note**: The aria props are the values that will be passed to the thumb of the slider. If your slider is for times for instance you would likely pass something like the following to ensure the value of the thumb is read out in a formatted state rather than just the value of where the thumb is on the track. If no `ariaValuetext` is passed to the component the screen reader will read just the value of the thumb\n\n            ariaLabels={['From', 'To']}\n    ariaValuetext={[getSliderTime(finalSliderStart), getSliderTime(finalSliderEnd)]}\n\n          "})]})}}},SimpleSlider=SimpleSliderExample,TimeSlider=TimeSliderExample,SimpleSliderWithSteps=SimpleSliderWithStepsExample,RangeSlider=RangeSliderExample,RangeSliderWithMinimumDistance=RangeSliderWithMinimumDistanceExample,VisualTest=MixedExample,VisualTestWithZoom=VisualTest.bind({});VisualTestWithZoom.args={zoomEnabled:!0}}}]);